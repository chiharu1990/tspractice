export default {};
// 同期処理の例外処理
// 同期的に発生した例外がキャッチできる
// try {
//   throw new Error("同期的なエラー");
// } catch(error) {
//   console.log("同期的なエラーをキャッチできる");
// }
// console.log("この行は実行されます");

// 実行
// 同期的なエラーをキャッチできる
// この行は実行されます

// 非同期処理の例外処理
// try...catch構文では非同期エラーをキャッチできない
// try {
//   setTimeout(() => {
//     throw new Error("非同期的なエラー");
//   }, 10)
// } catch(error) {
//   // 非同期エラーはキャッチできないため、この行は実行されない
// }
// console.log("この行は実行される");

// コールバック関数における例外はコールバック関数内で同期的なエラーとしてキャッチする必要がある
setTimeout(() => {
  // 非同期処理の中
  try {
    throw new Error("エラー");
  } catch (error) {
    console.log("エラーをキャッチできる");
  }
}, 10);
console.log("この行は実行される");

// 実行
// この行は実行される
// エラーをキャッチできる
